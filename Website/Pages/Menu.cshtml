@page
@model Website.Pages.MenuModel
@{
    ViewData["Title"] = "Menu";
}
@using DinoDiner.Menu

    <div class="content">
        <div>
            <h1>Menu</h1>
        
            <div class="menu-item">
                <h2>Combos</h2>
                @for (int i = 0; i < Model.Combos.Count; i++)
                {
                     CretaceousCombo combo = Model.Combos[i] as CretaceousCombo;
                                 

                    <h3>@combo.ToString()</h3>
                    <div>Price: @combo.Price</div>
                    <div>Calories: @combo.Calories</div>
                    <div>
                        Ingredients:
                        @for (int j = 0; j < @combo.Ingredients.Count; j++)
                        {
                        <div>@combo.Ingredients[j].ToString()</div>
                        }
                    </div>
                    <p>drink of combo: @combo.Drink</p>
                    <p>side of combo: @combo.Side</p>
                }

                <h2>Entrees</h2>
                @for (int i = 0; i < Model.Entrees.Count; i++)
                {
                    @if (Model.items.Contains(Model.Entrees[i]))
                    {
                
                    <h3>@Model.Entrees[i].ToString()</h3>
                    <div>Price: @Model.Entrees[i].Price</div>
                    <div>Calories: @Model.Entrees[i].Calories</div>
                    <div>
                        Ingredients:
                        @for (int j = 0; j < Model.Entrees[i].Ingredients.Count; j++)
                        {
                            <div>  @Model.Entrees[i].Ingredients[j].ToString()</div>
                        }
                    </div>
                    }
                }

                <h2>Sides</h2>
                @for (int i = 0; i < Model.Sides.Count; i++)
                {
                    @if (Model.items.Contains(Model.Sides[i]))
                    {

                    <h3>@Model.Sides[i].ToString()</h3>
                    <div>Price: @Model.Sides[i].Price</div>
                    <div>Calories: @Model.Sides[i].Calories</div>
                    <div>
                        Ingredients:
                        @for (int j = 0; j < Model.Sides[i].Ingredients.Count; j++)
                        {
                            <div>  @Model.Sides[i].Ingredients[j].ToString()</div>
                        }
                    </div>
                    }
                }

                <h2>Drinks</h2>
                @for (int i = 0; i < Model.Drinks.Count; i++)
                {
                    @if (Model.items.Contains(Model.Drinks[i]))
                    {

                    <h3>@Model.Drinks.[i].ToString()</h3>
                    <div>Price: @Model.Drinks.[i].Price</div>
                    <div>Calories: @Model.Drinks.[i].Calories</div>
                    <div>
                        Ingredients:
                        @for (int j = 0; j < Model.Drinks[i].Ingredients.Count; j++)
                        {
                        <div>  @Model.Drinks.[i].Ingredients[j].ToString()</div>
                        }
                    </div>
                    }
                }
            </div>
        </div>

        <form method="post">
            <input type="text" name="searchAndFilter" id="search" value="@Model.search" />
            <input type="submit" value="Search And Filter" />          

            <h4>Menu Category</h4>
            <div class="menu-category">
                <label>
                    <input type="checkbox" name="menuCategory" value="Combo" checked="@Model.filters.Contains("Combo")" />
                    Combo
                </label>
                <label>
                    <input type="checkbox" name="menuCategory" value="Entree" checked="@Model.filters.Contains("Entree")" />
                    Entree
                </label>
                <label>
                    <input type="checkbox" name="menuCategory" value="Side" checked="@Model.filters.Contains("Side")" />
                    Side
                </label>
                <label>
                    <input type="checkbox" name="menuCategory" value="Drink " checked="@Model.filters.Contains("Drink")" />
                    Drink
                </label>

            </div>

            <h4>Price</h4>
            <div class="number">
                <label>
                    Min: <input type="number" min="0" max="10" id="minimum-price" name="minimumPrice" value="@Model.minPrice" />
                </label>
                <label>
                    Max: <input type="number" min="0" max="10" id="maximum-price" name="maximumPrice" value="@Model.maxPrice" />
                </label>
            </div>

            <div class="exclude-ingredient">
                <h4>Excluding Ingredients</h4>
                <label>
                    <input type="checkbox" name="ingredients" value="Bread" checked="" />
                </label>
                <label>
                    <input type="checkbox" name="ingredients" value="Chicken" checked="" />
                </label>
                <label>
                    <input type="checkbox" name="ingredients" value="Bread" checked="" />
                </label>
                <label>
                    <input type="checkbox" name="ingredients" value="Bread" checked="" />
                </label>
            </div>
        </form>

    </div>

